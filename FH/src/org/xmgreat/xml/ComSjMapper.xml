<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="org.xmgreat.mapper.ComSjMapper">

	<!-- 更新智能推荐的SQL语句 -->
	<update id="updateSql" parameterType="org.xmgreat.entity.RuleEntity">
		update ruleTb set
		sqlStr=#{sqlStr} where ruleId=#{ruleId}
	</update>
	<!-- 获取用户本身信息 -->
	<select id="getUser" parameterType="java.lang.Integer"
		resultType="org.xmgreat.entity.UserEntity">
		select * from userTb where userId=#{userId}
	</select>
	<!-- 获取用户的择偶要求 -->
	<select id="getMateEntity" parameterType="java.lang.Integer"
		resultType="org.xmgreat.entity.MateEntity">
		select * from mateTb where userId=#{userId}
	</select>
	<!-- 获取智能推荐的SQL语句 -->
	<select id="getSql" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		select sqlStr from ruleTb where ruleId=#{ruleId}
	</select>
	<!-- 通过查找出来的SQL语句获取智能推荐获取用户列表,联查所有条件表 -->
	<select id="getAllList" resultMap="recomendList" parameterType="java.lang.String"
		resultType="org.xmgreat.entity.UserEntity">
		${sql}
	</select>
	<resultMap id="recomendList" type="org.xmgreat.entity.UserEntity">
		<id property="userId" column="userId" />
		<result property="adminName" column="adminName" />
		<result property="pasw" column="pasw" />
		<collection property="menuList" column="userId"
			javaType="java.util.ArrayList" select="getAllUserList" ofType="org.xmgreat.entity.MenuEntity">
		</collection>
	</resultMap>


	<!-- 获取符合择偶要的用户 -->
	<select id="getRecomList" resultType="org.xmgreat.entity.UserEntity"
		parameterType="org.xmgreat.entity.MateEntity">
		select * from(select userTb.*,rownum rw from userTb
		where brithday &gt;=#{hightAge} and
		brithday
		&lt;=#{lowAge} and
		height&gt;=#{lowHeight} and
		height&lt;=#{height} and nation=#{nation}
		and
		address=#{address} and
		married=#{married} and doctor=#{doctor})
		where rw&lt;=#{recommend}
	</select>

	<!-- 获取门户访问量 -->
	<select id="getWebsite" resultType="java.lang.Integer">
		select visitCount from
		websiteTb
	</select>

	<!-- 更新门户访问量 -->
	<update id="updateWebSite" parameterType="java.lang.Integer">
		update websiteTb set
		visitCount=#{visitCount}
	</update>

	<!-- 获取所有未删除用户，未牵手成功用户 -->
	<select id="getAllUserList" resultType="org.xmgreat.entity.UserEntity">
		select * from userTb
		where userId in (select userId from userTb where
		deleteId!=16 minus
		select userId from showTb)
	</select>
	<!-- 将刷新后的分数更新到用户列表 -->
	<update id="updateBanking" parameterType="org.xmgreat.entity.UserEntity">
		update userTb set
		popular=#{popular} where userId=#{userId}
	</update>

	<!-- 获取用户一共收件数量 -->
	<select id="getEmail" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select count(*) from emailTb where userId=#{userId}
	</select>
	<!-- 获取用户一共有多少访问量 -->
	<select id="getVisit" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select count(*) from visitTb where userId=#{userId}
	</select>
	<!-- 获取用户可以享受的推荐数 -->
	<select id="getRem" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select a.recommend from comboTb a,comMiddleTb
		b,CTMiddleTb c where c.userId=#{userId} and b.timeId=c.timeId and
		a.comboId=b.comboId
	</select>
	<!-- 根据性别获取受欢迎程度前十的用户 -->
	<select id="getCityName" resultType="java.lang.String"
		parameterType="java.lang.Integer">
		select cityName from cityTb where cityId=#{cityId}
	</select>
	<!-- 根据性别获取受欢迎程度前十的用户 -->
	<select id="getUserList" resultType="org.xmgreat.entity.UserEntity"
		parameterType="java.lang.String">
		select *from ( select userTb.*,rownum rw from userTb
		where userId in(select userId from userTb where sex=#{sex} minus
		select
		userId from showTb) order by popular desc) where rw &lt;=10
	</select>

	<!-- 服务器后台套餐管理分页查询加模糊搜索 -->
	<select id="getComboEntity" resultType="org.xmgreat.entity.ComboEntity"
		parameterType="org.xmgreat.entity.ConditionEntity">
		select *from (select rownum rw ,comboTb.* from comboTb
		where
		deleteId!=16
		<if test='comName!=null and comName!=""'>
			and name like '%'||upper(#{comName,jdbcType=VARCHAR})||'%'
		</if>
		<if test='price!=null and price!=""'>
			and fare like '%'||upper(#{price,jdbcType=VARCHAR})||'%'
		</if>
		<!-- 模糊搜索的条件要用oracle内置的函数进行拼接 -->
		<if test='time!=null and time!=""'>
			and month like '%'||upper(#{time,jdbcType=VARCHAR})||'%'
		</if>
		order by comboId desc) where rw &gt;=#{forNum} and
		rw &lt;=#{toNum}

	</select>

	<!-- 服务器后台套餐管理不带分页查询加模糊搜索 -->
	<select id="getComboCount" resultType="org.xmgreat.entity.ComboEntity">
		select rownum rw ,comboTb.* from comboTb
		where
		deleteId!=16
		<if test='comName!=null and comName!=""'>
			and name like '%'||upper(#{comName,jdbcType=VARCHAR})||'%'
		</if>
		<if test='price!=null and price!=""'>
			and fare like '%'||upper(#{price,jdbcType=VARCHAR})||'%'
		</if>
		<if test='time!=null and time!=""'>
			and month like '%'||upper(#{time,jdbcType=VARCHAR})||'%'
		</if>
		order by comboId desc
	</select>

	<!-- 获取后台分页条数 -->
	<select id="getNum" resultType="org.xmgreat.entity.ConditionEntity"
		parameterType="java.lang.Integer">
		select userData baseNum from doctorTb where
		styleName=#{styleName}
	</select>
	<!--获取套餐信息，进行套餐修改 -->
	<select id="getCom" resultType="org.xmgreat.entity.ComboEntity"
		parameterType="java.lang.Integer">
		select * from comboTb where comboId=#{comboId}
	</select>

	<!-- 新增套餐 -->
	<insert id="add" useGeneratedKeys="true" keyProperty="comboId"
		parameterType="org.xmgreat.entity.ComboEntity">
		<selectKey resultType="int" order="BEFORE" keyProperty="comboId">
			SELECT seqComboTb.NEXTVAL from dual
		</selectKey>
		insert into comboTb(comboId,name,fare,month,discount,recommend)
		values(#{comboId},#{name},#{fare},#{month},#{discount},#{recommend})
	</insert>

	<!-- 逻辑删除套餐 -->
	<update id="update" parameterType="java.lang.Integer">
		update comboTb set deleteId=16
		where comboId=#{comboId}
	</update>
	<!-- 套餐修改 -->
	<update id="updateCom" parameterType="org.xmgreat.entity.ComboEntity">
		update comboTb set
		name=#{name}, fare=#{fare},month=#{month},
		discount=#{discount},recommend=#{recommend} where comboId=#{comboId}
	</update>
	<!--获取套餐信息，对套餐名字查重 -->
	<select id="getCombo" resultType="org.xmgreat.entity.ComboEntity"
		parameterType="java.lang.String">
		select * from comboTb where name=#{name}
	</select>

</mapper>
	