<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="org.xmgreat.mapper.AdminZzhMapper">

	<select id="login"
		parameterType="org.xmgreat.entity.AdminEntity"
		resultType="org.xmgreat.entity.AdminEntity">
		select * from admintb where admin=#{admin} and pasw
		=#{pasw} and stype=1
	</select>

	<!--查询管理员 -->
  	<select id="selecAdmin"
		parameterType="org.xmgreat.entity.AdminEntity" resultMap="empMap">
		select * from(select t.*,rownum rn
		from (select u.adminId,m.middleId,r.roleid,u.admin,r.rolename
		from admintb u,roleMiddleTb m,roleTb r
		where u.adminId=m.adminid
		and m.roleId = r.roleId
		and r.roleId=2
		and u.stype=1
		 <if test="admin !=null and admin != ''">
		  and u.admin like '%${admin}%' 
		 </if>
		) t where rownum &lt;= #{page}*5) where rn &gt; (#{page}-1)*5
	</select>  
 
	<resultMap type="org.xmgreat.entity.AdminEntity" id="empMap">
		<id property="adminId" column="adminId" />
		<result property="admin" column="admin" />
		

		<association property="roleMiddleEntity" javaType="org.xmgreat.entity.RoleMiddleEntity"> 
			<id property="middleId" column="middleId" /> 
			<result property="roleid" column="roleid" 
			/> <result property="adminid" column="amdinid" /> 
		</association>

		<association property="roleEntity"
			javaType="org.xmgreat.entity.RoleEntity">
			<id property="roleId" column="roleId" />
			<result property="roleName" column="roleName" />
		</association>
	  </resultMap>
<!--查询管理员 -->
  	<select id="selecAdminP"
		parameterType="java.lang.Integer" resultMap="empMap1">
		select * from(select t.*,rownum rn
		from (select u.adminId,m.middleId,r.roleid,u.admin,r.rolename
		from admintb u,roleMiddleTb m,roleTb r
		where u.adminId=m.adminid
		and m.roleId = r.roleId
		and r.roleId=2
		and u.stype=1
		
		) t where rownum &lt;= #{page}*5) where rn &gt; (#{page}-1)*5
	</select>  
 
	<resultMap type="org.xmgreat.entity.AdminEntity" id="empMap1">
		<id property="adminId" column="adminId" />
		<result property="admin" column="admin" />
		

		<association property="roleMiddleEntity" javaType="org.xmgreat.entity.RoleMiddleEntity"> 
			<id property="middleId" column="middleId" /> 
			<result property="roleid" column="roleid" 
			/> <result property="adminid" column="amdinid" /> 
		</association>

		<association property="roleEntity"
			javaType="org.xmgreat.entity.RoleEntity">
			<id property="roleId" column="roleId" />
			<result property="roleName" column="roleName" />
		</association>
	  </resultMap>	 
	
  <!--  对管理员账户进行删除-->
	<update id="delAdmin"
		parameterType="org.xmgreat.entity.AdminEntity">
		update admintb set  stype=2 where adminId=#{adminId}
	</update>

  <!-- 添加管理员 -->
    <insert id="addAdmin" 
    parameterType="org.xmgreat.entity.AdminEntity"
    >
       insert into admintb (adminId, admin, pasw, stype)
       values(ADMIN_TBL.Nextval,#{admin},#{pasw},1)
     </insert>
<!-- 添加中间表角色id -->
    <insert id="addRoleId" 
    parameterType="org.xmgreat.entity.AdminEntity">
       insert into roleMiddleTb (middleId,adminId, roleId)
       values(MIDDLEID_1.Nextval,ADMINID_1.Nextval,2)
     </insert>     
     
  <!-- 查询管理员是否存在 -->
    <select id="nSAdmin"
    parameterType="org.xmgreat.entity.AdminEntity"
    resultType="org.xmgreat.entity.AdminEntity">
       select * from adminTb where admin=#{admin} 
    </select>
  
   <!--  重置密码-->
    <update id="upAdminPsw"
		parameterType="org.xmgreat.entity.AdminEntity">
		update admintb set pasw='123456'  where adminid=#{adminId}
	</update> 
  <!--显示动态菜单-->
  <select id="selecMenu"  
    parameterType="org.xmgreat.entity.AdminEntity"
    resultType="org.xmgreat.entity.MenuEntity"   >
    select m.menuId,m.menuName,m.pId,m.URL
    from adminTb a,menuTb m,roleMiddleTb r,roleTb t,roleMuneTb e 
    where  a.adminId=r.adminId 
    and r.roleId = t.roleId
    and t.roleId = e.roleId 
    and e.menuId = m.menuId
    and a.adminId = #{adminId}
  </select>
   <!--显示会员管理列表-->
	<select id="selecUser"
	parameterType="org.xmgreat.entity.ConditionEntity"	
	resultType="org.xmgreat.entity.UserEntity"
	>
	select * from(select t.*,rownum rn
    from
	(select * from usertb where deleteId = 1
	<if test="userName !=null and userName != ''">
	  and userName like '%${userName}%' 
     </if>
     <if test="onStage != null and onStage !=''">
	  and onStage = #{onStage}
     </if> 
      <if test="sex !=null and sex != ''">
	  and sex like '%${sex}%' 
     </if>
    <if test="teleNum != null and  teleNum != ''">
	  and teleNum = #{teleNum}
     </if> 
       <if test="email !=null and email != ''">
	  and email like '%${email}%' 
     </if>
		) t where rownum &lt;= #{currentPage}*5) where rn &gt; (#{currentPage}-1)*5
	</select>

<!--查询会员的个数-->
	<select id="getUserCount"
	parameterType="org.xmgreat.entity.ConditionEntity"
	resultType="org.xmgreat.entity.UserEntity"
	>
	select * from usertb where deleteId = 1
	 <if test="userName !=null and userName != ''">
	  and userName like '%${userName}%' 
     </if>
     <if test="onStage != null and onStage !=''">
	  and onStage = #{onStage}
     </if> 
      <if test="sex !=null and sex != ''">
	  and sex like '%${sex}%' 
     </if>
     <if test="teleNum != null and  teleNum != ''">
	  and teleNum = #{teleNum}
     </if> 
       <if test="email !=null and email != ''">
	  and email like '%${email}%' 
     </if>
	</select>
 <!--对会员启用-->
	<update id="startUser"
		parameterType="org.xmgreat.entity.UserEntity">
		update usertb set  onStage=1 where userId=#{userId}
	</update>
 <!--对会员禁用-->
	<update id="forbidUser"
		parameterType="org.xmgreat.entity.UserEntity">
		update usertb set  onStage=2 where userId=#{userId}
	</update>
<!--对会员删除-->
	<update id="delUser"
		parameterType="org.xmgreat.entity.UserEntity">
		update usertb set  deleteId=2 where userId=#{userId}
	</update>
<!--对会员审核 不通过-->
	<update id="audNoUser"
		parameterType="org.xmgreat.entity.UserEntity">
		update usertb set  auditStage=3 where userId=#{userId}
	</update>
<!--对会员审核 通过-->
	<update id="audYUser"
		parameterType="org.xmgreat.entity.UserEntity">
		update usertb set  auditStage=1 where userId=#{userId}
	</update>
<!--查看详情-->
	<select id="infoUser"
		parameterType="org.xmgreat.entity.ConditionEntity"
		resultType="org.xmgreat.entity.UserEntity">
		select * from userTb  where userId=#{userId}
	</select>	
<!-- 查找角色 -->	
   <select id="selectRole"
		resultType="org.xmgreat.entity.RoleEntity">
		select * from roletb  where roleid !=1
	</select>	
<!-- 查询已分配菜单 -->	
    <select id="alloMenu"
		parameterType="org.xmgreat.entity.RoleEntity"
		resultType="org.xmgreat.entity.MenuEntity">
		select distinct p.* from menutb p,rolemunetb r where r.roleid=#{roleId} and r.menuid = p.menuid order by p.menuid
	</select>	
<!-- 查询未分配的菜单 -->	
    <select id="unaMenu"
		parameterType="org.xmgreat.entity.RoleEntity"
		resultType="org.xmgreat.entity.MenuEntity">
		<!-- select  P.* from menutb p where p.menuid not in(select menuid from rolemunetb where roleid=#{roleId}) order by p.menuid -->
	select  p.menuname ,p.menuid,p.pid  from menutb p where p.pid!=0 and p.menuid not in( select menuid from rolemunetb where roleid=#{roleId}  ) UNION select menuname ,menuid,pid from menutb where pid=0
	
	</select>
<!-- 找到这个角色的菜单 -->
	<select id="roleMenu"
	    parameterType="org.xmgreat.entity.RoleEntity"
		resultType="org.xmgreat.entity.RoleMiddleEntity">
	    select * from rolemunetb where roleid=#{roleId}
	</select>	
<!-- 添加选择菜单 -->
     <insert id="chMenu"
        parameterType = "org.xmgreat.entity.RoleMenuEntity">
        INSERT INTO roleMuneTb (middleid,ROLEID, menuid) VALUES (ROLEMENUTB_1.Nextval,#{roleId}, #{menuId})
        </insert>
<!-- 删除选择的菜单-->
    <delete id = "delMenu"
    parameterType = "org.xmgreat.entity.RoleMenuEntity">
    delete from roleMuneTb where roleid=#{roleId} and menuId=#{menuId}
    </delete>
<!-- 添加菜单的父节点 -->
     <insert id ="addFnode"
     parameterType = "org.xmgreat.entity.RoleMenuEntity"> 
     INSERT INTO roleMuneTb (roleId, menuId) VALUES (#{roleId}, (select menuId from menuTb  where menuId=(select pid from menuTb where menuid=#{menuId})))
     </insert>
<!--查询所有菜单 -->
    <select id="selectAllMenu"  
		resultType="org.xmgreat.entity.MenuEntity">
	    select menuId from menutb 
	</select>
</mapper>
	